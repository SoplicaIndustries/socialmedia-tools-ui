.accounts-container-wrapper {
  width: 100%;
  position: relative;
  background-color: var(--container-bg, white);
  border-radius: var(--border-radius, 12px);
  padding: var(--padding, 16px);
  box-shadow: var(--shadow, 0 1px 3px rgba(0,0,0,0.12));
}

.accounts-container__title {
  margin: 0;
  font-size: 1.25rem;
}

/* On mobile: single row with horizontal scroll */
.accounts-container {
  display: flex;
  overflow-x: auto;
  scroll-behavior: smooth;
  padding-bottom: 8px;
  -webkit-overflow-scrolling: touch; /* smooth scrolling for iOS */
  scrollbar-width: thin; /* Firefox */
}

/* Force row display regardless of screen size */
.accounts-container--row {
  display: flex !important;
  overflow-x: auto;
}

/* Force grid display regardless of screen size */
.accounts-container--grid {
  display: grid !important;
  grid-template-columns: repeat(var(--items-per-row, 5), 1fr);
  grid-template-rows: repeat(var(--max-rows, 1), auto);
  gap: 16px;
  overflow-x: visible;
}

/* Simplified layout options */
.accounts-container--scrollable {
  display: flex;
  flex-wrap: nowrap;
  overflow-x: auto;
  padding-bottom: 8px;
  scrollbar-width: thin;
}

.accounts-container--wrap {
  display: flex;
  flex-wrap: wrap;
  overflow: visible;
  gap: 16px;
}

/* Hide scrollbar for Chrome/Safari/Opera */
.accounts-container::-webkit-scrollbar {
  height: 4px;
}

.accounts-container::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.05);
  border-radius: 10px;
}

.accounts-container::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 10px;
}

/* Scroll indicator */
.accounts-container__scroll-indicator {
  position: absolute;
  right: var(--padding, 16px);
  bottom: var(--padding, 16px);
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--container-bg);
  border-radius: 50%;
  box-shadow: 0 2px 4px rgba(0,0,0,0.15);
  animation: pulse 2s infinite;
}

.accounts-container__scroll-indicator span {
  display: none;
}

.accounts-container__scroll-indicator svg {
  margin-left: 4px;
}

@keyframes pulse {
  0% { opacity: 0.7; }
  50% { opacity: 1; }
  100% { opacity: 0.7; }
}

/* On larger screens: display in grid */
@media (min-width: var(--expand-breakpoint, 768px)) {
  .accounts-container {
    display: grid;
    grid-template-columns: repeat(var(--items-per-row, 5), 1fr);
    grid-template-rows: repeat(var(--max-rows, 1), auto);
    gap: 16px;
    overflow-x: visible;
  }
  
  .accounts-container__scroll-indicator {
    display: none;
  }
}

.accounts-container-header {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 1rem;
  gap: 1rem;
}

.edit-button {
  display: none;
}

.edit-instructions {
  font-size: 14px;
  color: #666;
  margin-bottom: 1rem;
  font-style: italic;
  text-align: center;
}

.remove-account-button {
  position: absolute;
  top: -8px;
  right: -8px;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 0, 0, 0.8);
  color: white;
  border: none;
  border-radius: 50%;
  font-size: 18px;
  cursor: pointer;
  z-index: 10;
  padding: 0;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.remove-account-button:hover {
  background-color: rgba(255, 0, 0, 1);
  transform: scale(1.1);
}

.account-card-wrapper {
  position: relative;
}

.add-account-button-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  margin: 8px;
}

.add-account-button {
  width: 64px;
  height: 64px;
  border-radius: 50%;
  background-color: var(--container-bg, white);
  border: 2px dashed var(--primary-color, blue);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 8px;
  transition: all 0.2s ease;
}

.add-account-button:hover {
  background-color: rgba(0, 0, 255, 0.05);
}

.plus-icon {
  font-size: 32px;
  font-weight: bold;
  color: var(--primary-color, blue);
}

.add-account-label {
  font-size: 14px;
  color: var(--primary-color, blue);
}

/* Simplified edit button with consistent colors */
.edit-button-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  cursor: pointer;
  padding: 6px 12px;
  border-radius: 4px;
  transition: background-color 0.2s ease;
}

.edit-button-container:hover {
  background-color: rgba(0, 0, 255, 0.1);
}

.edit-icon {
  font-size: 16px;
  margin-right: 8px;
  color: var(--primary-color, blue);
}

.edit-text {
  font-size: 14px;
  font-weight: 500;
  color: var(--primary-color, blue);
}

.editing-active .edit-text,
.editing-active .edit-icon {
  color: #e53935; /* Red color when active for both text and icon */
  font-weight: bold;
}

/* Remove old button styles */
.edit-account-button-wrapper,
.edit-account-button,
.edit-account-label {
  display: none;
}

/* Overlay background */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  z-index: 100;
}

/* Container with active overlay */
.accounts-container-wrapper.overlay-active {
  position: relative;
  z-index: 101;
}

/* Add button wrapper */
.add-button-wrapper {
  position: relative;
  z-index: 102;
}

/* Remove platform selector and related styles as they're now in AddAccountButton.scss */

/* Center add button styling when menu is open */
.menu-open .add-account-button {
  background-color: var(--primary-color, blue);
  border: none;
  box-shadow: 0 0 15px rgba(0, 0, 255, 0.3);
  z-index: 103;
}

.menu-open .add-account-button .plus-icon {
  color: white;
  transform: rotate(45deg);
}

/* Center add button styling when menu is open */
.menu-open .add-account-button {
  background-color: var(--primary-color, blue);
  border: none;
  transform: scale(1.1);
  z-index: 103;
}

.menu-open .add-account-button .plus-icon {
  color: white;
}

.menu-open .add-account-label {
  font-weight: bold;
}

/* Mixin to distribute items evenly on a circle */
@mixin distribute-on-circle($nb-items, $circle-size, $item-size) {
  $half-item: ($item-size / 2);
  $half-parent: ($circle-size / 2);
  position: relative;
  width: $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  box-sizing: content-box;
  > * {
    position: absolute;
    top: 50%;
    left: 50%;
    width: $item-size;
    height: $item-size;
    margin: -$half-item;
  }
  $angle: (360 / $nb-items);
  $rot: 0;
  @for $i from 1 through $nb-items {
    > :nth-of-type(#{$i}) {
      transform: rotate($rot * 1deg) translate($half-parent) rotate($rot * -1deg);
    }
    $rot: ($rot + $angle);
  }
}
